name: Publish new release

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'The workflow run ID to download artifacts from'
        required: true
        type: string
  workflow_run:
    workflows: [Build_Test_And_Publish]
    types: [completed]

permissions:
  packages: write
  contents: write
  actions: read
  id-token: write
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set run ID
      id: set-run-id
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "RUN_ID=${{ github.event.inputs.run_id }}" >> $GITHUB_OUTPUT
          echo "Using manually provided run ID: ${{ github.event.inputs.run_id }}"
        else
          echo "RUN_ID=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          echo "Using workflow_run event run ID: ${{ github.event.workflow_run.id }}"
        fi
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.3.0
      with:
        github-token: ${{ github.token }}
        run-id: ${{ steps.set-run-id.outputs.RUN_ID }}
        pattern: "!*.dockerbuild"
    - name: Read tag info
      id: read-tag
      run: |
        TAG=$(cat tag-info/tag-info.txt)
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Using release tag: $TAG"
    - uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.read-tag.outputs.tag }}
        name: ${{ steps.read-tag.outputs.tag }}
        prerelease: true
        files: |
          **/osx-x64/topaz-osx-x64
          **/linux-x64/topaz-linux-x64
          **/win-x64/topaz-win-x64.exe
          **/linux-arm64/topaz-linux-arm64
          **/win-x64/localhost.crt
          **/win-x64/localhost.pfx
    - name: Copy artifact for Docker
      run: |
        mkdir publish
        cp ./linux-x64/* publish/
        cp ./linux-arm64/* publish/
    - name: Log in to Docker Hub
      uses: docker/login-action@v3.5.0
      with:
        username: thecloudtheory
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Set up Docker
      uses: docker/setup-docker-action@v4
      with:
        daemon-config: |
          {
            "debug": true,
            "features": {
              "containerd-snapshotter": true
            }
          }
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: thecloudtheory/topaz-cli
        tags: |
          type=raw,value=${{ steps.read-tag.outputs.tag }}
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6.18.0
      with:
        context: .
        file: ./Topaz.CLI/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: index.docker.io/thecloudtheory/topaz-cli
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
