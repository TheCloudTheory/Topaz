name: CI Topaz

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - '.github/workflows/**'
      - 'Examples/**'
      - 'website/**'
      - 'static/**'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      checks: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install nbgv
      run: dotnet tool install -g nbgv
    - name: Install certificate
      run: |
        cd certificate
        ./ubuntu-install.sh
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Publish Linux
      run: dotnet publish ${{ github.workspace }}/Topaz.CLI/Topaz.CLI.csproj -c Release -r linux-x64 -o ./publish
    - name: Build interim Docker image
      id: push
      uses: docker/build-push-action@v6.18.0
      with:
        context: .
        file: ./Topaz.CLI/Dockerfile
        push: false
        tags: topaz/cli
        platforms: linux/amd64
    - name: Test
      env:
        TOPAZ_TENANT_ID: ${{ secrets.TOPAZ_TENANT_ID }}
        TOPAZ_CLIENT_ID: ${{ secrets.TOPAZ_CLIENT_ID }}
        TOPAZ_CLIENT_SECRET: ${{ secrets.TOPAZ_CLIENT_SECRET }}
      run: dotnet test -m:1 --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage" --results-directory ${{ github.workspace }}/TestResults
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          ${{ github.workspace }}/**/*.trx
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.8
      with:
        reports: ./TestResults/**/coverage.cobertura.xml
        targetdir: coveragereport
        reporttypes: Html;MarkdownSummaryGithub;Badges
    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport        
        path: coveragereport
    - name: Add comment to PR
      if: github.event_name == 'pull_request'
      run: gh pr comment $PR_NUMBER --body-file coveragereport/SummaryGithub.md
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.number }}
    - name: Publish coverage in build summary
      run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
      shell: bash
    - name: TODO to Issue
      uses: alstr/todo-to-issue-action@v5.1.12
      with:
        LANGUAGES: "${{ github.workspace }}/todo.json"
