name: "[CI] Build & Test"

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install certificate
      run: |
        cd certificate
        ./ubuntu-install.sh
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage" --results-directory ${{ github.workspace }}/TestResults
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          ${{ github.workspace }}/**/*.trx
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ./TestResults/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Publish Windows
      run: dotnet publish -c Release -r win-x64 --self-contained true -o ./publish/win-x64
    - name: Publish Linux
      run: dotnet publish -c Release -r linux-x64 --self-contained true -o ./publish/linux-x64
    - name: Publish macOS
      run: dotnet publish -c Release -r osx-x64 --self-contained true -o ./publish/osx-x64
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: win-x64
        path: ./publish/win-x64
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: linux-x64
        path: ./publish/linux-x64
    - name: Upload MacOS artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: osx-x64
        path: ./publish/osx-x64
